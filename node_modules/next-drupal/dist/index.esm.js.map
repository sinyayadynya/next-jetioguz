{"version":3,"file":"index.esm.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/jsonapi-errors.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug)\n    ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n    : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  // if (!context.locale && !resource?.default_langcode) {\n  //   return null\n  // }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import { JsonApiError } from \"./types\"\n\nexport class JsonApiErrors extends Error {\n  errors: JsonApiError[] | string\n  statusCode: number\n\n  constructor(errors: JsonApiError[], statusCode: number) {\n    super()\n\n    this.errors = errors\n    this.statusCode = statusCode\n    this.message = JsonApiErrors.formatMessage(errors)\n  }\n\n  private static formatMessage(errors) {\n    if (typeof errors === \"string\") {\n      return errors\n    }\n\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  JsonApiWithCacheOptions,\n  JsonApiCreateResourceBody,\n  JsonApiUpdateResourceBody,\n  DrupalClientAuthUsernamePassword,\n  DrupalClientAuthAccessToken,\n  DrupalClientAuthClientIdSecret,\n  JsonApiCreateFileResourceBody,\n  DrupalView,\n  DrupalFile,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\nimport { JsonApiErrors } from \"./jsonapi-errors\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nfunction isBasicAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthUsernamePassword {\n  return (\n    (auth as DrupalClientAuthUsernamePassword)?.username !== undefined ||\n    (auth as DrupalClientAuthUsernamePassword)?.password !== undefined\n  )\n}\n\nfunction isAccessTokenAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthAccessToken {\n  return (auth as DrupalClientAuthAccessToken)?.access_token !== undefined\n}\n\nfunction isClientIdSecretAuth(\n  auth: DrupalClient[\"auth\"]\n): auth is DrupalClientAuthClientIdSecret {\n  return (\n    (auth as DrupalClientAuthClientIdSecret)?.clientId !== undefined ||\n    (auth as DrupalClientAuthClientIdSecret)?.clientSecret !== undefined\n  )\n}\n\nexport class DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: DrupalClientOptions[\"debug\"]\n\n  frontPage: DrupalClientOptions[\"frontPage\"]\n\n  private serializer: DrupalClientOptions[\"serializer\"]\n\n  private cache: DrupalClientOptions[\"cache\"]\n\n  private throwJsonApiErrors?: DrupalClientOptions[\"throwJsonApiErrors\"]\n\n  private logger: DrupalClientOptions[\"logger\"]\n\n  private fetcher?: DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: DrupalClientOptions[\"headers\"]\n\n  private _auth?: DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: DrupalClientOptions[\"accessToken\"]\n\n  private accessTokenScope?: DrupalClientOptions[\"accessTokenScope\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new DrupalClient.\n   *\n   * const client = new DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n      throwJsonApiErrors = true,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n    this.throwJsonApiErrors = throwJsonApiErrors\n\n    // Do not throw errors in production.\n    if (process.env.NODE_ENV === \"production\") {\n      this.throwJsonApiErrors = false\n    }\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (isBasicAuth(auth)) {\n        if (!auth.username || !auth.password) {\n          throw new Error(\n            `'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (isAccessTokenAuth(auth)) {\n        if (!auth.access_token || !auth.token_type) {\n          throw new Error(\n            `'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      credentials: \"include\",\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    // Using the auth set on the client.\n    // TODO: Abstract this to a re-usable.\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      if (init.withAuth === true) {\n        if (typeof this._auth === \"undefined\") {\n          throw new Error(\n            \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n          )\n        }\n\n        // By default, if withAuth is set to true, we use the auth configured\n        // in the client constructor.\n        if (typeof this._auth === \"function\") {\n          this._debug(`Using custom auth callback.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth()\n        } else if (typeof this._auth === \"string\") {\n          this._debug(`Using custom authorization header.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth\n        } else if (typeof this._auth === \"object\") {\n          this._debug(`Using custom auth credentials.`)\n\n          if (isBasicAuth(this._auth)) {\n            const basic = Buffer.from(\n              `${this._auth.username}:${this._auth.password}`\n            ).toString(\"base64\")\n\n            init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n          } else if (isClientIdSecretAuth(this._auth)) {\n            // Use the built-in client_credentials grant.\n            this._debug(`Using default auth (client_credentials).`)\n\n            // Fetch an access token and add it to the request.\n            // Access token can be fetched from cache or using a custom auth method.\n            const token = await this.getAccessToken(this._auth)\n            if (token) {\n              init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n            }\n          } else if (isAccessTokenAuth(this._auth)) {\n            init[\"headers\"][\n              \"Authorization\"\n            ] = `${this._auth.token_type} ${this._auth.access_token}`\n          }\n        }\n      } else if (typeof init.withAuth === \"string\") {\n        this._debug(`Using custom authorization header.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth\n      } else if (typeof init.withAuth === \"function\") {\n        this._debug(`Using custom authorization callback.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth()\n      } else if (isBasicAuth(init.withAuth)) {\n        this._debug(`Using basic authorization header`)\n\n        const basic = Buffer.from(\n          `${init.withAuth.username}:${init.withAuth.password}`\n        ).toString(\"base64\")\n\n        init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n      } else if (isClientIdSecretAuth(init.withAuth)) {\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken(init.withAuth)\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      } else if (isAccessTokenAuth(init.withAuth)) {\n        init[\"headers\"][\n          \"Authorization\"\n        ] = `${init.withAuth.token_type} ${init.withAuth.access_token}`\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    return await fetch(input, init)\n  }\n\n  async createResource<T extends JsonApiResource>(\n    type: string,\n    body: JsonApiCreateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, options?.params)\n\n    this._debug(`Creating resource of type ${type}.`)\n    this._debug(url.toString())\n\n    // Add type to body.\n    body.data.type = type\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async createFileResource<T = DrupalFile>(\n    type: string,\n    body: JsonApiCreateFileResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const hostType = body?.data?.attributes?.type\n\n    const apiPath = await this.getEntryForResourceType(\n      hostType,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(\n      `${apiPath}/${body.data.attributes.field}`,\n      options?.params\n    )\n\n    this._debug(`Creating file resource for media of type ${type}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n        Accept: \"application/vnd.api+json\",\n        \"Content-Disposition\": `file; filename=\"${body.data.attributes.filename}\"`,\n      },\n      body: body.data.attributes.file,\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async updateResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    body: JsonApiUpdateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Updating resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    // Update body.\n    body.data.type = type\n    body.data.id = uuid\n\n    const response = await this.fetch(url.toString(), {\n      method: \"PATCH\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async deleteResource(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<boolean> {\n    options = {\n      withAuth: true,\n      params: {},\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Deleting resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"DELETE\",\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    return response.status === 204\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    const previewData = context.previewData as {\n      resourceVersion?: string\n    }\n\n    options = {\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n      params: {},\n      ...options,\n    }\n\n    const _options = {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: options?.withAuth,\n      params: options?.params,\n    }\n\n    // Check if resource is versionable.\n    // Add support for revisions for node by default.\n    const isVersionable = options.isVersionable || /^node--/.test(type)\n\n    // If the resource is versionable and no resourceVersion is supplied via params.\n    // Use the resourceVersion from previewData or fallback to the latest version.\n    if (\n      isVersionable &&\n      typeof options.params.resourceVersion === \"undefined\"\n    ) {\n      options.params.resourceVersion =\n        previewData?.resourceVersion || \"rel:latest-version\"\n    }\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n\n      // Given we already have the path info, we can skip subrequests and just make a simple\n      // request to the Drupal site to get the entity.\n      if (input.entity?.uuid) {\n        return await this.getResource<T>(type, input.entity.uuid, _options)\n      }\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const resource = await this.getResourceByPath<T>(path, _options)\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          this.throwError(new Error(error.message))\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      this.throwError(new Error(this.formatJsonApiErrors(data.errors)))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    this._debug(`Fetching resource collection of type ${type}`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      // Do not throw errors here.\n      // Otherwise next.js will catch error and throw a 500.\n      // We want a 404.\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    return await this.translatePath(path, {\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug)\n      ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n      : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      this.throwError(\n        new Error(\n          `Failed to fetch JSON:API index at ${url.toString()} - ${\n            error.message\n          }`\n        )\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}` +\n        (locale ? `/${locale}${this.apiPrefix}/` : `${this.apiPrefix}/`) +\n        `${id}/${bundle}`\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, plugin } = request.query\n\n    try {\n      // Always clear preview data to handle different scopes.\n      response.clearPreviewData()\n\n      // Validate the preview url.\n      const validateUrl = this.buildUrl(\"/next/preview-url\")\n      const result = await this.fetch(validateUrl.toString(), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(request.query),\n      })\n\n      if (!result.ok) {\n        response.statusCode = result.status\n\n        return response.json(await result.json())\n      }\n\n      const validationPayload = await result.json()\n\n      response.setPreviewData({\n        resourceVersion,\n        plugin,\n        ...validationPayload,\n      })\n\n      // Fix issue with cookie.\n      // See https://github.com/vercel/next.js/discussions/32238.\n      // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n      if (this.forceIframeSameSiteCookie) {\n        const previous = response.getHeader(\"Set-Cookie\") as string[]\n        previous.forEach((cookie, index) => {\n          previous[index] = cookie.replace(\n            \"SameSite=Lax\",\n            \"SameSite=None;Secure\"\n          )\n        })\n        response.setHeader(`Set-Cookie`, previous)\n      }\n\n      // We can safely redirect to the slug since this has been validated on the server.\n      response.writeHead(307, { Location: slug })\n\n      return response.end()\n    } catch (error) {\n      return response.status(422).end()\n    }\n  }\n\n  async getMenu<T = DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T = JsonApiResource>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<DrupalView<T>> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(\n    opts?: DrupalClientAuthClientIdSecret\n  ): Promise<AccessToken> {\n    if (this.accessToken && this.accessTokenScope === opts?.scope) {\n      return this.accessToken\n    }\n\n    if (!opts?.clientId || !opts?.clientSecret) {\n      if (typeof this._auth === \"undefined\") {\n        throw new Error(\n          \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n        )\n      }\n    }\n\n    if (\n      !isClientIdSecretAuth(this._auth) ||\n      (opts && !isClientIdSecretAuth(opts))\n    ) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    const clientId = opts?.clientId || this._auth.clientId\n    const clientSecret = opts?.clientSecret || this._auth.clientSecret\n    const url = this.buildUrl(opts?.url || this._auth.url || DEFAULT_AUTH_URL)\n\n    if (\n      this.accessTokenScope === opts?.scope &&\n      this._token &&\n      Date.now() < this.tokenExpiresOn\n    ) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString(\"base64\")\n\n    let body = `grant_type=client_credentials`\n\n    if (opts?.scope) {\n      body = `${body}&scope=${opts.scope}`\n\n      this._debug(`Using scope: ${opts.scope}`)\n    }\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    this.accessTokenScope = opts?.scope\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async getErrorsFromResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return _error.errors\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n\n  // Error handling.\n  // If throwErrors is enable, we show errors in the Next.js overlay.\n  // Otherwise we log the errors even if debugging is turned off.\n  // In production, errors are always logged never thrown.\n  private throwError(error: Error) {\n    if (!this.throwJsonApiErrors) {\n      return this.logger.error(error)\n    }\n\n    throw error\n  }\n\n  private async handleJsonApiErrors(response: Response) {\n    if (!response?.ok) {\n      const errors = await this.getErrorsFromResponse(response)\n      throw new JsonApiErrors(errors, response.status)\n    }\n  }\n\n  private getAuthFromContextAndOptions(\n    context: GetStaticPropsContext,\n    options: JsonApiWithAuthOptions\n  ) {\n    // If not in preview or withAuth is provided, use that.\n    if (!context.preview) {\n      // If we have provided an auth, use that.\n      if (typeof options?.withAuth !== \"undefined\") {\n        return options.withAuth\n      }\n\n      // Otherwise we fallback to the global auth.\n      return this.withAuth\n    }\n\n    // If no plugin is provided, return.\n    const plugin = context.previewData?.[\"plugin\"]\n    if (!plugin) {\n      return null\n    }\n\n    let withAuth = this._auth\n\n    if (plugin === \"simple_oauth\") {\n      // If we are using a client id and secret auth, pass the scope.\n      if (isClientIdSecretAuth(withAuth) && context.previewData?.[\"scope\"]) {\n        withAuth = {\n          ...withAuth,\n          scope: context.previewData?.[\"scope\"],\n        }\n      }\n    }\n\n    if (plugin === \"jwt\") {\n      const accessToken = context.previewData?.[\"access_token\"]\n\n      if (accessToken) {\n        return `Bearer ${accessToken}`\n      }\n    }\n\n    return withAuth\n  }\n}\n"],"names":["cache","NodeCache","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","CACHE_KEY","access_token","basic","Buffer","from","toString","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","response","ok","Error","statusText","json","result","set","expires_in","buildHeaders","accessToken","token","UNSTABLE_DRUPAL_ACCESS_TOKEN","getJsonApiIndex","locale","options","url","buildUrl","JSONAPI_PREFIX","getJsonApiPathForResourceType","type","index","links","href","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","path","params","URL","charAt","search","stringify","getPathFromContext","context","prefix","slug","Array","isArray","map","s","encodeURIComponent","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","buildMenuTree","tree","length","children","filter","link","id","getResourceCollectionFromContext","getResourceCollection","undefined","apiPath","getPathsFromContext","types","Promise","all","locales","resources","buildPathsFromResources","paths","flat","flatMap","resource","alias","replace","split","getResource","uuid","getResourceByPath","isVersionable","indexOf","resourceVersion","_excluded","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResourceFromContext","test","previewData","getResourcePreviewUrl","entity","default_langcode","langcode","PreviewHandler","request","query","secret","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","setPreviewData","writeHead","Location","DrupalPreview","translatePathFromContext","translatePath","getResourceTypeFromContext","_catch","jsonapi","resourceName","getSearchIndexFromContext","getSearchIndex","getView","viewId","displayId","results","meta","useMenu","router","useRouter","React","useState","setData","error","setError","isLoading","setIsLoading","useEffect","fetchMenuItems","logger","log","console","debug","warn","JsonApiErrors","statusCode","formatMessage","title","recover","e","then","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","isBasicAuth","auth","username","password","isAccessTokenAuth","isClientIdSecretAuth","clientId","clientSecret","DrupalClient","baseUrl","frontPage","serializer","throwJsonApiErrors","fetcher","_headers","_auth","_apiPrefix","useDefaultResourceTypeEntry","_token","accessTokenScope","tokenExpiresOn","withAuth","previewSecret","forceIframeSameSiteCookie","getStaticPathsFromContext","apiPrefix","defaultLogger","NODE_ENV","_debug","input","init","token_type","createResource","getEntryForResourceType","handleJsonApiErrors","createFileResource","hostType","attributes","field","filename","file","updateResource","deleteResource","withCache","cacheKey","pathPrefix","getAuthFromContextAndOptions","throwError","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","preview","plugin","clearPreviewData","validateUrl","validationPayload","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","opts","scope","Date","now","getErrorsFromResponse","_error","value"],"mappings":"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"}