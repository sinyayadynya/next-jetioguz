{"version":3,"file":"index.modern.mjs","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/jsonapi-errors.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug)\n    ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n    : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  // if (!context.locale && !resource?.default_langcode) {\n  //   return null\n  // }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import { JsonApiError } from \"./types\"\n\nexport class JsonApiErrors extends Error {\n  errors: JsonApiError[] | string\n  statusCode: number\n\n  constructor(errors: JsonApiError[], statusCode: number) {\n    super()\n\n    this.errors = errors\n    this.statusCode = statusCode\n    this.message = JsonApiErrors.formatMessage(errors)\n  }\n\n  private static formatMessage(errors) {\n    if (typeof errors === \"string\") {\n      return errors\n    }\n\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  GetResourcePreviewUrlOptions,\n  JsonApiWithCacheOptions,\n  JsonApiCreateResourceBody,\n  JsonApiUpdateResourceBody,\n  DrupalClientAuthUsernamePassword,\n  DrupalClientAuthAccessToken,\n  DrupalClientAuthClientIdSecret,\n  JsonApiCreateFileResourceBody,\n  DrupalView,\n  DrupalFile,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\nimport { JsonApiErrors } from \"./jsonapi-errors\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nfunction isBasicAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthUsernamePassword {\n  return (\n    (auth as DrupalClientAuthUsernamePassword)?.username !== undefined ||\n    (auth as DrupalClientAuthUsernamePassword)?.password !== undefined\n  )\n}\n\nfunction isAccessTokenAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthAccessToken {\n  return (auth as DrupalClientAuthAccessToken)?.access_token !== undefined\n}\n\nfunction isClientIdSecretAuth(\n  auth: DrupalClient[\"auth\"]\n): auth is DrupalClientAuthClientIdSecret {\n  return (\n    (auth as DrupalClientAuthClientIdSecret)?.clientId !== undefined ||\n    (auth as DrupalClientAuthClientIdSecret)?.clientSecret !== undefined\n  )\n}\n\nexport class DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: DrupalClientOptions[\"debug\"]\n\n  frontPage: DrupalClientOptions[\"frontPage\"]\n\n  private serializer: DrupalClientOptions[\"serializer\"]\n\n  private cache: DrupalClientOptions[\"cache\"]\n\n  private throwJsonApiErrors?: DrupalClientOptions[\"throwJsonApiErrors\"]\n\n  private logger: DrupalClientOptions[\"logger\"]\n\n  private fetcher?: DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: DrupalClientOptions[\"headers\"]\n\n  private _auth?: DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: DrupalClientOptions[\"accessToken\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new DrupalClient.\n   *\n   * const client = new DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n      throwJsonApiErrors = true,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n    this.throwJsonApiErrors = throwJsonApiErrors\n\n    // Do not throw errors in production.\n    if (process.env.NODE_ENV === \"production\") {\n      this.throwJsonApiErrors = false\n    }\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (isBasicAuth(auth)) {\n        if (!auth.username || !auth.password) {\n          throw new Error(\n            `'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (isAccessTokenAuth(auth)) {\n        if (!auth.access_token || !auth.token_type) {\n          throw new Error(\n            `'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      credentials: \"include\",\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    // Using the auth set on the client.\n    // TODO: Abstract this to a re-usable.\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      if (init.withAuth === true) {\n        if (typeof this._auth === \"undefined\") {\n          throw new Error(\n            \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n          )\n        }\n\n        // By default, if withAuth is set to true, we use the auth configured\n        // in the client constructor.\n        if (typeof this._auth === \"function\") {\n          this._debug(`Using custom auth callback.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth()\n        } else if (typeof this._auth === \"string\") {\n          this._debug(`Using custom authorization header.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth\n        } else if (typeof this._auth === \"object\") {\n          this._debug(`Using custom auth credentials.`)\n\n          if (isBasicAuth(this._auth)) {\n            const basic = Buffer.from(\n              `${this._auth.username}:${this._auth.password}`\n            ).toString(\"base64\")\n\n            init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n          } else if (isClientIdSecretAuth(this._auth)) {\n            // Use the built-in client_credentials grant.\n            this._debug(`Using default auth (client_credentials).`)\n\n            // Fetch an access token and add it to the request.\n            // Access token can be fetched from cache or using a custom auth method.\n            const token = await this.getAccessToken(this._auth)\n            if (token) {\n              init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n            }\n          } else if (isAccessTokenAuth(this._auth)) {\n            init[\"headers\"][\n              \"Authorization\"\n            ] = `${this._auth.token_type} ${this._auth.access_token}`\n          }\n        }\n      } else if (typeof init.withAuth === \"string\") {\n        this._debug(`Using custom authorization header.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth\n      } else if (typeof init.withAuth === \"function\") {\n        this._debug(`Using custom authorization callback.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth()\n      } else if (isBasicAuth(init.withAuth)) {\n        this._debug(`Using basic authorization header`)\n\n        const basic = Buffer.from(\n          `${init.withAuth.username}:${init.withAuth.password}`\n        ).toString(\"base64\")\n\n        init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n      } else if (isClientIdSecretAuth(init.withAuth)) {\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken(init.withAuth)\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      } else if (isAccessTokenAuth(init.withAuth)) {\n        init[\"headers\"][\n          \"Authorization\"\n        ] = `${init.withAuth.token_type} ${init.withAuth.access_token}`\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    return await fetch(input, init)\n  }\n\n  async createResource<T extends JsonApiResource>(\n    type: string,\n    body: JsonApiCreateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, options?.params)\n\n    this._debug(`Creating resource of type ${type}.`)\n    this._debug(url.toString())\n\n    // Add type to body.\n    body.data.type = type\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async createFileResource<T = DrupalFile>(\n    type: string,\n    body: JsonApiCreateFileResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const hostType = body?.data?.attributes?.type\n\n    const apiPath = await this.getEntryForResourceType(\n      hostType,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(\n      `${apiPath}/${body.data.attributes.field}`,\n      options?.params\n    )\n\n    this._debug(`Creating file resource for media of type ${type}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n        Accept: \"application/vnd.api+json\",\n        \"Content-Disposition\": `file; filename=\"${body.data.attributes.filename}\"`,\n      },\n      body: body.data.attributes.file,\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async updateResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    body: JsonApiUpdateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Updating resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    // Update body.\n    body.data.type = type\n    body.data.id = uuid\n\n    const response = await this.fetch(url.toString(), {\n      method: \"PATCH\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async deleteResource(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<boolean> {\n    options = {\n      withAuth: true,\n      params: {},\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Deleting resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"DELETE\",\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    return response.status === 204\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    const previewData = context.previewData as { resourceVersion?: string }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    const _options = {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    }\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n\n      // Given we already have the path info, we can skip subrequests and just make a simple\n      // request to the Drupal site to get the entity.\n      if (input.entity?.uuid) {\n        return await this.getResource<T>(type, input.entity.uuid, _options)\n      }\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const resource = await this.getResourceByPath<T>(path, _options)\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          this.throwError(new Error(error.message))\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      this.throwError(new Error(this.formatJsonApiErrors(data.errors)))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    this._debug(`Fetching resource collection of type ${type}`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options.withAuth,\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      // Do not throw errors here.\n      // Otherwise next.js will catch error and throw a 500.\n      // We want a 404.\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    const response = await this.translatePath(path, {\n      withAuth: context.preview || options.withAuth,\n    })\n\n    return response\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug)\n      ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n      : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      this.throwError(\n        new Error(\n          `Failed to fetch JSON:API index at ${url.toString()} - ${\n            error.message\n          }`\n        )\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, secret, locale, defaultLocale } =\n      request.query\n\n    if (secret !== this.previewSecret) {\n      return response\n        .status(401)\n        .json(options?.errorMessages.secret || \"Invalid preview secret.\")\n    }\n\n    if (!slug) {\n      return response\n        .status(401)\n        .end(options?.errorMessages.slug || \"Invalid slug.\")\n    }\n\n    let _options: GetResourcePreviewUrlOptions = {\n      isVersionable: !!resourceVersion,\n    }\n\n    if (locale && defaultLocale) {\n      // Fix for und locale.\n      const _locale = locale === \"und\" ? defaultLocale : locale\n\n      _options = {\n        ..._options,\n        locale: _locale as string,\n        defaultLocale: defaultLocale as string,\n      }\n    }\n\n    const entity = await this.getResourceByPath(slug as string, {\n      withAuth: true,\n      ..._options,\n    })\n\n    const missingEntityErrorMessage = `The entity with slug ${slug} coud not be found. If the entity exists on your Drupal site, make sure the proper permissions are configured so that Next.js can access it.`\n    const missingPathAliasErrorMessage = `The path alias is missing for entity with slug ${slug}.`\n\n    if (!entity) {\n      this.throwError(new Error(missingEntityErrorMessage))\n\n      return response.status(404).end(missingEntityErrorMessage)\n    }\n\n    if (!entity?.path?.alias) {\n      this.throwError(new Error(missingPathAliasErrorMessage))\n\n      return response.status(404).end(missingPathAliasErrorMessage)\n    }\n\n    const url = entity.default_langcode\n      ? entity?.path.alias\n      : `/${entity.path.langcode}${entity.path.alias}`\n\n    if (!url) {\n      return response\n        .status(404)\n        .end(options?.errorMessages.slug || \"Invalid slug\")\n    }\n\n    response.setPreviewData({\n      resourceVersion,\n    })\n\n    // Fix issue with cookie.\n    // See https://github.com/vercel/next.js/discussions/32238.\n    // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n    if (this.forceIframeSameSiteCookie) {\n      const previous = response.getHeader(\"Set-Cookie\") as string[]\n      previous.forEach((cookie, index) => {\n        previous[index] = cookie.replace(\"SameSite=Lax\", \"SameSite=None;Secure\")\n      })\n      response.setHeader(`Set-Cookie`, previous)\n    }\n\n    response.writeHead(307, { Location: url })\n\n    return response.end()\n  }\n\n  async getMenu<T = DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T = JsonApiResource>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<DrupalView<T>> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(opts?: {\n    clientId: string\n    clientSecret: string\n    url?: string\n  }): Promise<AccessToken> {\n    if (this.accessToken) {\n      return this.accessToken\n    }\n\n    if (!opts?.clientId || !opts?.clientSecret) {\n      if (typeof this._auth === \"undefined\") {\n        throw new Error(\n          \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n        )\n      }\n    }\n\n    if (\n      !isClientIdSecretAuth(this._auth) ||\n      (opts && !isClientIdSecretAuth(opts))\n    ) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    const clientId = opts?.clientId || this._auth.clientId\n    const clientSecret = opts?.clientSecret || this._auth.clientSecret\n    const url = this.buildUrl(opts?.url || this._auth.url || DEFAULT_AUTH_URL)\n\n    if (this._token && Date.now() < this.tokenExpiresOn) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString(\"base64\")\n\n    const response = await fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async getErrorsFromResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return _error.errors\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n\n  // Error handling.\n  // If throwErrors is enable, we show errors in the Next.js overlay.\n  // Otherwise we log the errors even if debugging is turned off.\n  // In production, errors are always logged never thrown.\n  private throwError(error: Error) {\n    if (!this.throwJsonApiErrors) {\n      return this.logger.error(error)\n    }\n\n    throw error\n  }\n\n  private async handleJsonApiErrors(response: Response) {\n    if (!response?.ok) {\n      const errors = await this.getErrorsFromResponse(response)\n      throw new JsonApiErrors(errors, response.status)\n    }\n  }\n}\n"],"names":["cache","NodeCache","CACHE_KEY","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","access_token","basic","Buffer","from","toString","response","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","ok","Error","statusText","result","json","set","expires_in","JSONAPI_PREFIX","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","options","getJsonApiPathForResourceType","type","locale","index","getJsonApiIndex","links","href","url","buildUrl","buildHeaders","path","params","URL","charAt","search","stringify","accessToken","UNSTABLE_DRUPAL_ACCESS_TOKEN","token","getPathFromContext","context","prefix","slug","Array","isArray","map","s","encodeURIComponent","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","tree","buildMenuTree","length","children","filter","link","id","getResourceCollection","apiPath","undefined","getResourceCollectionFromContext","getPathsFromContext","types","paths","Promise","all","locales","resources","buildPathsFromResources","flat","flatMap","resource","alias","replace","split","getResourceFromContext","isVersionable","test","previewData","getResourceByPath","resourceVersion","indexOf","_excluded","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResource","uuid","DrupalPreview","request","PreviewHandler","secret","query","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","getResourcePreviewUrl","setPreviewData","writeHead","Location","entity","default_langcode","langcode","translatePath","translatePathFromContext","getResourceTypeFromContext","jsonapi","resourceName","error","getSearchIndex","getSearchIndexFromContext","getView","viewId","displayId","results","meta","useMenu","router","useRouter","setData","React","useState","setError","isLoading","setIsLoading","useEffect","fetchMenuItems","logger","log","console","debug","warn","JsonApiErrors","constructor","statusCode","formatMessage","title","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","isBasicAuth","auth","username","password","isAccessTokenAuth","isClientIdSecretAuth","clientId","clientSecret","DrupalClient","baseUrl","frontPage","serializer","throwJsonApiErrors","fetcher","_headers","_auth","_apiPrefix","useDefaultResourceTypeEntry","_token","tokenExpiresOn","withAuth","previewSecret","forceIframeSameSiteCookie","getStaticPathsFromContext","apiPrefix","defaultLogger","NODE_ENV","_debug","token_type","value","Date","now","input","init","createResource","getEntryForResourceType","handleJsonApiErrors","createFileResource","hostType","attributes","field","filename","file","updateResource","deleteResource","withCache","cacheKey","pathPrefix","preview","throwError","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","_locale","missingEntityErrorMessage","missingPathAliasErrorMessage","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","opts","getErrorsFromResponse","_error"],"mappings":"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"}